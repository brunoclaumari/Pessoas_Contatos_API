// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pessoas_API.Context;

#nullable disable

namespace Pessoas_API.Migrations
{
    [DbContext(typeof(PessoaContext))]
    [Migration("20240831054907_inicia_banco")]
    partial class inicia_banco
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Pessoas_API.Entidades.Contato", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<long>("PessoaId")
                        .HasColumnType("bigint")
                        .HasColumnName("pessoa_id");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("telefone");

                    b.Property<string>("Whatsapp")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("whatsapp");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.ToTable("tbContato");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Email = "joana@gmail.com",
                            Nome = "Joana Santana",
                            PessoaId = 1L,
                            Telefone = "(11) 91111-1111",
                            Whatsapp = ""
                        },
                        new
                        {
                            Id = 2L,
                            Email = "raquelst@gmail.com",
                            Nome = "Raquel Santana",
                            PessoaId = 1L,
                            Telefone = "(11) 92222-2222",
                            Whatsapp = ""
                        },
                        new
                        {
                            Id = 3L,
                            Email = "jalberto@gmail.com",
                            Nome = "João Alberto Santana",
                            PessoaId = 1L,
                            Telefone = "(11) 93333-3333",
                            Whatsapp = ""
                        },
                        new
                        {
                            Id = 4L,
                            Email = "viniribeiro@gmail.com",
                            Nome = "Vinícius Ribeiro",
                            PessoaId = 2L,
                            Telefone = "(11) 94444-4444",
                            Whatsapp = ""
                        },
                        new
                        {
                            Id = 5L,
                            Email = "josevieira@gmail.com",
                            Nome = "José Vieira",
                            PessoaId = 2L,
                            Telefone = "(11) 95555-5555",
                            Whatsapp = ""
                        },
                        new
                        {
                            Id = 6L,
                            Email = "leilasanches@gmail.com",
                            Nome = "Leila Sanches",
                            PessoaId = 3L,
                            Telefone = "(11) 96666-6666",
                            Whatsapp = "(11) 96666-6666"
                        },
                        new
                        {
                            Id = 7L,
                            Email = "luanafr@gmail.com",
                            Nome = "Luana de Freitas",
                            PessoaId = 3L,
                            Telefone = "(11) 97777-7777",
                            Whatsapp = ""
                        });
                });

            modelBuilder.Entity("Pessoas_API.Entidades.Pessoa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("tbPessoa");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Email = "mariasanta@gmail.com",
                            Nome = "Maria Santana"
                        },
                        new
                        {
                            Id = 2L,
                            Email = "jcarlos@gmail.com",
                            Nome = "João Carlos da Costa"
                        },
                        new
                        {
                            Id = 3L,
                            Email = "ricardopr@gmail.com",
                            Nome = "Ricardo Pereira dos Santos"
                        });
                });

            modelBuilder.Entity("Pessoas_API.Entidades.Contato", b =>
                {
                    b.HasOne("Pessoas_API.Entidades.Pessoa", null)
                        .WithMany("Contatos")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pessoas_API.Entidades.Pessoa", b =>
                {
                    b.Navigation("Contatos");
                });
#pragma warning restore 612, 618
        }
    }
}
